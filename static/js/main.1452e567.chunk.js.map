{"version":3,"sources":["../node_modules/typescript/lib sync","variables/charts.js","assets/img/anime3.png","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","components/Sidebar/Sidebar.js","contexts/BackgroundColorContext.js","contexts/ThemeContext.js","components/FixedPlugin/FixedPlugin.js","ToDoList/SimpleTable.js","Graphs/BigChart.js","Graphs/BarChart.js","Graphs/LineChart.js","Graphs/PieChart.js","views/Map.js","views/Typography.js","views/UserProfile.js","views/Mech.js","views/Electrical.js","views/ENTC.js","views/Comp.js","layouts/Admin/Admin.js","routes.js","views/Civil.js","assets/img/react-logo.png","components/Navbars/RTLNavbar.js","layouts/RTL/RTL.js","components/ThemeWrapper/ThemeWrapper.js","components/BackgroundColorWrapper/BackgroundColorWrapper.js","index.js","variables/Mechdata.js","variables/Electrical.js","variables/ENTCData.js","variables/Civildata.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","chart1_2_options","maintainAspectRatio","legend","display","tooltips","backgroundColor","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","position","responsive","scales","yAxes","barPercentage","gridLines","drawBorder","color","zeroLineColor","ticks","suggestedMin","suggestedMax","padding","fontColor","xAxes","chartExample1","data1","canvas","gradientStroke","getContext","createLinearGradient","addColorStop","labels","datasets","label","fill","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","data","data2","data3","data4","options","chartExample2","chartExample3","hoverBackgroundColor","chartExample4","studentsData","name","year","company","sal","AdminNavbar","props","React","useState","collapseOpen","setcollapseOpen","modalSearch","setmodalSearch","setcolor","useEffect","window","addEventListener","updateColor","removeEventListener","innerWidth","toggleModalSearch","Navbar","className","classNames","expand","Container","fluid","toggled","sidebarOpened","NavbarToggler","onClick","toggleSidebar","NavbarBrand","href","preventDefault","brandText","Collapse","navbar","isOpen","Nav","InputGroup","Button","UncontrolledDropdown","nav","DropdownToggle","caret","Modal","modalClassName","toggle","ModalHeader","Input","placeholder","type","Footer","ps","NavItem","NavLink","Date","getFullYear","target","backgroundColors","BackgroundColorContext","createContext","changeColor","Sidebar","location","useLocation","sidebarRef","useRef","navigator","platform","indexOf","PerfectScrollbar","current","suppressScrollX","suppressScrollY","destroy","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","src","imgSrc","alt","text","to","innerLink","Consumer","ref","map","prop","key","redirect","routeName","path","pathname","pro","layout","activeClassName","icon","rtlName","defaultProps","themes","ThemeContext","theme","changeTheme","FixedPlugin","dropDownIsOpen","setdropDownIsOpen","Dropdown","tag","Badge","bgColor","handleBgClick","SimpleTable","Col","lg","md","Card","CardHeader","CardTitle","CardBody","Table","item","BigChart","title","bigChartData","setbigChartData","setBgChartData","xs","Row","sm","ButtonGroup","active","size","isTemplateLiteralTypeNode","BarChart","LineChart","PieChart","Map","Typography","UserProfile","notificationAlertRef","Form","FormGroup","defaultValue","disabled","htmlFor","cols","rows","CardFooter","place","Math","floor","random","message","autoDismiss","notificationAlert","notify","CardText","Mech","Electrical","ENTC","Comp","component","Admin","mainPanelRef","document","documentElement","setsidebarOpened","classList","remove","tables","querySelectorAll","i","length","add","scrollTop","scrollingElement","getBrandText","Fragment","from","DropdownMenu","right","DropdownItem","require","default","divider","RTL","body","head","link","createElement","rel","appendChild","getElementById","RTLNavbar","ThemeContextWrapper","setTheme","Provider","value","children","BackgroundColorWrapper","setColor","ReactDOM","render"],"mappings":"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","file":"static/js/main.1452e567.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 114;","\r\nlet chart1_2_options = {\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  tooltips: {\r\n    backgroundColor: \"#f5f5f5\",\r\n    titleFontColor: \"#333\",\r\n    bodyFontColor: \"#666\",\r\n    bodySpacing: 4,\r\n    xPadding: 12,\r\n    mode: \"nearest\",\r\n    intersect: 0,\r\n    position: \"nearest\",\r\n  },\r\n  responsive: true,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: \"rgba(29,140,248,0.0)\",\r\n          zeroLineColor: \"transparent\",\r\n        },\r\n        ticks: {\r\n          suggestedMin: 60,\r\n          suggestedMax: 125,\r\n          padding: 20,\r\n          fontColor: \"#9a9a9a\",\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: \"rgba(29,140,248,0.1)\",\r\n          zeroLineColor: \"transparent\",\r\n        },\r\n        ticks: {\r\n          padding: 20,\r\n          fontColor: \"#9a9a9a\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\n\r\nlet chartExample1 = {\r\n  data1: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"INFOSYS\",\r\n        \"GOOGLE\",\r\n        \"TCS\",\r\n        \"COGNIZENT\",\r\n        \"IBM\",\r\n        \"Thought Works\",\r\n        \"ORACLE\",\r\n        \"HCL\",\r\n        \"HYPERLINK\",\r\n        \"WIPRO\",\r\n        \"FACEBOOK\",\r\n        \"AMAZON\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Participated students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 30, 35, 30, 0, 45, 30, 50, 30, 45, 30, 30],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data2: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"INFOSYS\",\r\n        \"GOOGLE\",\r\n        \"TCS\",\r\n        \"COGNIZENT\",\r\n        \"IBM\",\r\n        \"Thought Works\",\r\n        \"ORACLE\",\r\n        \"HCL\",\r\n        \"HYPERLINK\",\r\n        \"WIPRO\",\r\n        \"FACEBOOK\",\r\n        \"AMAZON\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Participated students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 33, 32, 40, 5, 55, 10, 60, 40, 45, 30, 60],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data3: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"INFOSYS\",\r\n        \"GOOGLE\",\r\n        \"TCS\",\r\n        \"COGNIZENT\",\r\n        \"IBM\",\r\n        \"Thought Works\",\r\n        \"ORACLE\",\r\n        \"HCL\",\r\n        \"HYPERLINK\",\r\n        \"WIPRO\",\r\n        \"FACEBOOK\",\r\n        \"AMAZON\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Participated students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 30, 35, 30, 0, 45, 30, 50, 30, 45, 30, 30],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data4: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"INFOSYS\",\r\n        \"GOOGLE\",\r\n        \"TCS\",\r\n        \"COGNIZENT\",\r\n        \"IBM\",\r\n        \"Thought Works\",\r\n        \"ORACLE\",\r\n        \"HCL\",\r\n        \"HYPERLINK\",\r\n        \"WIPRO\",\r\n        \"FACEBOOK\",\r\n        \"AMAZON\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Exam performane\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 33, 32, 40, 5, 55, 10, 60, 40, 45, 30, 60],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: chart1_2_options,\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nlet chartExample2 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"],\r\n      datasets: [\r\n        {\r\n          label: \"placed students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [30, 40, 30, 20, 25, 40],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: chart1_2_options,\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nlet chartExample3 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\r\n\r\n    return {\r\n      labels: [\"INFOSYS\", \"WIPRO\", \"AIMDOC\", \"CAPGIMINI\", \"COGNIZANT\", \"TCS\"],\r\n      datasets: [\r\n        {\r\n          label: \"students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          hoverBackgroundColor: gradientStroke,\r\n          borderColor: \"#d048b6\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          data: [53, 20, 10, 80, 100, 45],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    tooltips: {\r\n      backgroundColor: \"#f5f5f5\",\r\n      titleFontColor: \"#333\",\r\n      bodyFontColor: \"#666\",\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\",\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(225,78,202,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            suggestedMin: 60,\r\n            suggestedMax: 120,\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(225,78,202,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nconst chartExample4 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\r\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\r\n\r\n    return {\r\n      labels: [\"First \", \"Secoand \", \"Third\", \"Last\"],\r\n      datasets: [\r\n        {\r\n          label: \"Passed students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#00d6b4\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#00d6b4\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#00d6b4\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [60, 55, 54, 50],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n\r\n    tooltips: {\r\n      backgroundColor: \"#f5f5f5\",\r\n      titleFontColor: \"#333\",\r\n      bodyFontColor: \"#666\",\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\",\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          barPercentage: 1.6,\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(29,140,248,0.0)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            suggestedMin: 50,\r\n            suggestedMax: 125,\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n\r\n      xAxes: [\r\n        {\r\n          barPercentage: 1.6,\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(0,242,195,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\nconst studentsData = {\r\n  data: [\r\n    {\r\n      name: \"ragiv shegal\",\r\n      year: \"2019\",\r\n      company: \"TCS\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"ravi shegal\",\r\n      year: \"2019\",\r\n      company: \"TCS\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"aditi bindra\",\r\n      year: \"2019\",\r\n      company: \"TCS\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"neha Rajput\",\r\n      year: \"2019\",\r\n      company: \"TCS\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"vikas jadhav\",\r\n      year: \"2019\",\r\n      company: \"TCS\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"Pooja warma\",\r\n      year: \"2019\",\r\n      company: \"Thought Works\",\r\n      sal: \"803.24\",\r\n    },\r\n   \r\n  ],\r\n};\r\nmodule.exports = {\r\n  chartExample1, // in src/views/Dashboard.js\r\n  chartExample2, // in src/views/Dashboard.js\r\n  chartExample3, // in src/views/Dashboard.js\r\n  chartExample4, // in src/views/Dashboard.js\r\n  studentsData, //in src/views/Dashboard.js\r\n};\r\n","export default __webpack_public_path__ + \"static/media/anime3.4438e506.png\";","\r\nimport React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  Input,\r\n  InputGroup,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Modal,\r\n  NavbarToggler,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\n\r\nfunction AdminNavbar(props) {\r\n  const [collapseOpen, setcollapseOpen] = React.useState(false);\r\n  const [modalSearch, setmodalSearch] = React.useState(false);\r\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"resize\", updateColor);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", updateColor);\r\n    };\r\n  });\r\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n  const updateColor = () => {\r\n    if (window.innerWidth < 993 && collapseOpen) {\r\n      setcolor(\"bg-white\");\r\n    } else {\r\n      setcolor(\"navbar-transparent\");\r\n    }\r\n  };\r\n  // this function opens and closes the collapse on small devices\r\n  const toggleCollapse = () => {\r\n    if (collapseOpen) {\r\n      setcolor(\"navbar-transparent\");\r\n    } else {\r\n      setcolor(\"bg-white\");\r\n    }\r\n    setcollapseOpen(!collapseOpen);\r\n  };\r\n  // this function is to open the Search modal\r\n  const toggleModalSearch = () => {\r\n    setmodalSearch(!modalSearch);\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\r\n        <Container fluid>\r\n          <div className=\"navbar-wrapper\">\r\n            <div\r\n              className={classNames(\"navbar-toggle d-inline\", {\r\n                toggled: props.sidebarOpened,\r\n              })}\r\n            >\r\n              <NavbarToggler onClick={props.toggleSidebar}>\r\n                <span className=\"navbar-toggler-bar bar1\" />\r\n                <span className=\"navbar-toggler-bar bar2\" />\r\n                <span className=\"navbar-toggler-bar bar3\" />\r\n              </NavbarToggler>\r\n            </div>\r\n            <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n              {props.brandText}\r\n            </NavbarBrand>\r\n          </div>\r\n          <NavbarToggler onClick={toggleCollapse}>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n          </NavbarToggler>\r\n          <Collapse navbar isOpen={collapseOpen}>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <InputGroup className=\"search-bar\">\r\n                <Button color=\"link\" onClick={toggleModalSearch}>\r\n                 \r\n                </Button>\r\n              </InputGroup>\r\n              <UncontrolledDropdown nav>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"default\"\r\n                  data-toggle=\"dropdown\"\r\n                  nav\r\n                >\r\n                  \r\n                </DropdownToggle>\r\n                </UncontrolledDropdown>\r\n              <UncontrolledDropdown nav>\r\n              </UncontrolledDropdown>\r\n              <li className=\"separator d-lg-none\" />\r\n            </Nav>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <Modal\r\n        modalClassName=\"modal-search\"\r\n        isOpen={modalSearch}\r\n        toggle={toggleModalSearch}\r\n      >\r\n        <ModalHeader>\r\n          <Input placeholder=\"SEARCH\" type=\"text\" />\r\n          <button\r\n            aria-label=\"Close\"\r\n            className=\"close\"\r\n            onClick={toggleModalSearch}\r\n          >\r\n            <i className=\"tim-icons icon-simple-remove\" />\r\n          </button>\r\n        </ModalHeader>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminNavbar;\r\n","\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Container, Nav, NavItem, NavLink } from \"reactstrap\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <Container fluid>\r\n        <Nav>\r\n          <NavItem>\r\n            <NavLink href=\"http://www.alardinstitutes.com/About-Us\">crack developer</NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <div className=\"copyright\">\r\n          © {new Date().getFullYear()} made with{\" \"}\r\n          <i className=\"tim-icons icon-heart-2\" /> by{\" \"}\r\n          <a href=\"http://www.alardinstitutes.com/About-Us\" target=\"_blank\">\r\n            Alard Collage of enginnering\r\n          </a>{\" \"}\r\n          \r\n        </div>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","\r\nimport React from \"react\";\r\nimport { NavLink, Link, useLocation } from \"react-router-dom\";\r\n// nodejs library to set properties for components\r\nimport { PropTypes } from \"prop-types\";\r\n\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// reactstrap components\r\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\r\nimport {\r\n  BackgroundColorContext,\r\n  backgroundColors,\r\n} from \"contexts/BackgroundColorContext\";\r\n\r\nvar ps;\r\n\r\nfunction Sidebar(props) {\r\n  const location = useLocation();\r\n  const sidebarRef = React.useRef(null);\r\n  // verifies if routeName is the one active (in browser input)\r\n  const activeRoute = (routeName) => {\r\n    return location.pathname === routeName ? \"active\" : \"\";\r\n  };\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(sidebarRef.current, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false,\r\n      });\r\n    }\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n      }\r\n    };\r\n  });\r\n  const linkOnClick = () => {\r\n    document.documentElement.classList.remove(\"nav-open\");\r\n  };\r\n  const { routes, rtlActive, logo } = props;\r\n  let logoImg = null;\r\n  let logoText = null;\r\n  if (logo !== undefined) {\r\n    if (logo.outterLink !== undefined) {\r\n      logoImg = (\r\n        <a\r\n          href={logo.outterLink}\r\n          className=\"simple-text logo-mini\"\r\n          target=\"_blank\"\r\n          onClick={props.toggleSidebar}\r\n        >\r\n          <div className=\"logo-img\">\r\n            <img src={logo.imgSrc} alt=\"react-logo\" />\r\n          </div>\r\n        </a>\r\n      );\r\n      logoText = (\r\n        <a\r\n          href={logo.outterLink}\r\n          className=\"simple-text logo-normal\"\r\n          target=\"_blank\"\r\n          onClick={props.toggleSidebar}\r\n        >\r\n          {logo.text}\r\n        </a>\r\n      );\r\n    } else {\r\n      logoImg = (\r\n        <Link\r\n          to={logo.innerLink}\r\n          className=\"simple-text logo-mini\"\r\n          onClick={props.toggleSidebar}\r\n        >\r\n          <div className=\"logo-img\">\r\n            <img src={logo.imgSrc} alt=\"react-logo\" />\r\n          </div>\r\n        </Link>\r\n      );\r\n      logoText = (\r\n        <Link\r\n          to={logo.innerLink}\r\n          className=\"simple-text logo-normal\"\r\n          onClick={props.toggleSidebar}\r\n        >\r\n          {logo.text}\r\n        </Link>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color }) => (\r\n        <div className=\"sidebar\" data={color}>\r\n          <div className=\"sidebar-wrapper\" ref={sidebarRef}>\r\n            {logoImg !== null || logoText !== null ? (\r\n              <div className=\"logo\">\r\n                {logoImg}\r\n                {logoText}\r\n              </div>\r\n            ) : null}\r\n            <Nav>\r\n              {routes.map((prop, key) => {\r\n                if (prop.redirect) return null;\r\n                return (\r\n                  <li\r\n                    className={\r\n                      activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\")\r\n                    }\r\n                    key={key}\r\n                  >\r\n                    <NavLink\r\n                      to={prop.layout + prop.path}\r\n                      className=\"nav-link\"\r\n                      activeClassName=\"active\"\r\n                      onClick={props.toggleSidebar}\r\n                    >\r\n                      <i className={prop.icon} />\r\n                      <p>{rtlActive ? prop.rtlName : prop.name}</p>\r\n                    </NavLink>\r\n                  </li>\r\n                );\r\n              })}\r\n              <li className=\"active-pro\">\r\n                <ReactstrapNavLink href=\"http://www.unipune.ac.in/\">\r\n                  <i className=\"tim-icons icon-spaceship\" />\r\n                  <p>Univercity Page</p>\r\n                </ReactstrapNavLink>\r\n              </li>\r\n            </Nav>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  rtlActive: false,\r\n  routes: [{}],\r\n};\r\n\r\nSidebar.propTypes = {\r\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\r\n  // insde the links of this component\r\n  rtlActive: PropTypes.bool,\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  logo: PropTypes.shape({\r\n    // innerLink is for links that will direct the user within the app\r\n    // it will be rendered as <Link to=\"...\">...</Link> tag\r\n    innerLink: PropTypes.string,\r\n    // outterLink is for links that will direct the user outside the app\r\n    // it will be rendered as simple <a href=\"...\">...</a> tag\r\n    outterLink: PropTypes.string,\r\n    // the text of the logo\r\n    text: PropTypes.node,\r\n    // the image src of the logo\r\n    imgSrc: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default Sidebar;\r\n","import { createContext } from \"react\";\r\n\r\nexport const backgroundColors = {\r\n  primary: \"primary\",\r\n  blue: \"blue\",\r\n  green: \"green\",\r\n};\r\n\r\nexport const BackgroundColorContext = createContext({\r\n  color: backgroundColors.blue,\r\n  changeColor: (color) => {},\r\n});\r\n","import { createContext } from \"react\";\r\n\r\nexport const themes = {\r\n  dark: \"\",\r\n  light: \"white-content\",\r\n};\r\n\r\nexport const ThemeContext = createContext({\r\n  theme: themes.dark,\r\n  changeTheme: () => {},\r\n});\r\n","\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Button, Dropdown, DropdownToggle, Badge } from \"reactstrap\";\r\nimport { ThemeContext, themes } from \"contexts/ThemeContext\";\r\nimport { backgroundColors } from \"contexts/BackgroundColorContext\";\r\n\r\nfunction FixedPlugin(props) {\r\n  const [dropDownIsOpen, setdropDownIsOpen] = React.useState(false);\r\n  const handleClick = () => {\r\n    setdropDownIsOpen(!dropDownIsOpen);\r\n  };\r\n  return (\r\n    <div className=\"fixed-plugin\">\r\n      <Dropdown isOpen={dropDownIsOpen} toggle={handleClick}>\r\n        <DropdownToggle tag=\"div\">\r\n          <i className=\"fa fa-cog fa-2x\" />\r\n        </DropdownToggle>\r\n        <ul className=\"dropdown-menu show\">\r\n          <li className=\"header-title\">SIDEBAR BACKGROUND</li>\r\n          <li className=\"adjustments-line\">\r\n            <div className=\"badge-colors text-center\">\r\n              <Badge\r\n                color=\"primary\"\r\n                className={\r\n                  props.bgColor === backgroundColors.primary ? \"active\" : \"\"\r\n                }\r\n                onClick={() => {\r\n                  props.handleBgClick(backgroundColors.primary);\r\n                }}\r\n              />{\" \"}\r\n              <Badge\r\n                color=\"info\"\r\n                className={\r\n                  props.bgColor === backgroundColors.blue ? \"active\" : \"\"\r\n                }\r\n                onClick={() => {\r\n                  props.handleBgClick(backgroundColors.blue);\r\n                }}\r\n              />{\" \"}\r\n              <Badge\r\n                color=\"success\"\r\n                className={\r\n                  props.bgColor === backgroundColors.green ? \"active\" : \"\"\r\n                }\r\n                onClick={() => {\r\n                  props.handleBgClick(backgroundColors.green);\r\n                }}\r\n              />{\" \"}\r\n            </div>\r\n          </li>\r\n          <li className=\"adjustments-line text-center color-change\">\r\n            <ThemeContext.Consumer>\r\n              {({ changeTheme }) => (\r\n                <>\r\n                  <span className=\"color-label\">LIGHT MODE</span>{\" \"}\r\n                  <Badge\r\n                    className=\"light-badge mr-2\"\r\n                    onClick={() => changeTheme(themes.light)}\r\n                  />{\" \"}\r\n                  <Badge\r\n                    className=\"dark-badge ml-2\"\r\n                    onClick={() => changeTheme(themes.dark)}\r\n                  />{\" \"}\r\n                  <span className=\"color-label\">DARK MODE</span>{\" \"}\r\n                </>\r\n              )}\r\n            </ThemeContext.Consumer>\r\n          </li>\r\n          \r\n        </ul>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FixedPlugin;\r\n","import React from 'react'\r\n\r\n// reactstrap components\r\nimport {\r\n  \r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  \r\n  Table,\r\n  Col,\r\n\r\n} from \"reactstrap\";\r\n\r\n// core components\r\n\r\n\r\n\r\nconst SimpleTable = ({data}) => {\r\n  const studentsData =data;\r\n    return (\r\n      <Col lg=\"6\" md=\"12\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle tag=\"h4\">Placed Students</CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Table className=\"tablesorter\" responsive>\r\n              <thead className=\"text-primary\">\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Year</th>\r\n                  <th>Company</th>\r\n                  <th className=\"text-center\">Salary ($)</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {studentsData.data.map((item)=>(<tr>\r\n                  <td>{item.name}</td>\r\n                  <td>{item.year}</td>\r\n                  <td>{item.company}</td>\r\n                  <td className=\"text-center\">{item.sal}</td>\r\n                </tr>))\r\n                }\r\n              </tbody>\r\n            </Table>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    );\r\n}\r\n\r\nexport default SimpleTable\r\n","import React from 'react'\r\nimport { Line} from \"react-chartjs-2\";\r\nimport classNames from \"classnames\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\n\r\nimport { isTemplateLiteralTypeNode } from 'typescript';\r\n\r\nconst BigChart = ({data,title}) => {\r\n  const  chartExample1=data;\r\n     const [bigChartData, setbigChartData] = React.useState(\"data1\");\r\n     const setBgChartData = (name) => {\r\n       setbigChartData(name);\r\n     };\r\n    return (\r\n      <Col xs=\"12\">\r\n        <Card className=\"card-chart\">\r\n          <CardHeader>\r\n            <Row>\r\n              <Col className=\"text-left\" sm=\"6\">\r\n                <h5 className=\"card-category\">Events</h5>\r\n                <CardTitle tag=\"h2\">{title}</CardTitle>\r\n              </Col>\r\n              <Col sm=\"6\">\r\n                <ButtonGroup\r\n                  className=\"btn-group-toggle float-right\"\r\n                  data-toggle=\"buttons\"\r\n                >\r\n                  <Button\r\n                    tag=\"label\"\r\n                    className={classNames(\"btn-simple\", {\r\n                      active: bigChartData === \"data1\",\r\n                    })}\r\n                    color=\"info\"\r\n                    id=\"0\"\r\n                    size=\"sm\"\r\n                    onClick={() => setBgChartData(\"data1\")}\r\n                  >\r\n                    <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                      First Year\r\n                    </span>\r\n                    <span className=\"d-block d-sm-none\">\r\n                      <i className=\"tim-icons icon-single-02\" />\r\n                    </span>\r\n                  </Button>\r\n                  <Button\r\n                    color=\"info\"\r\n                    id=\"1\"\r\n                    size=\"sm\"\r\n                    tag=\"label\"\r\n                    className={classNames(\"btn-simple\", {\r\n                      active: bigChartData === \"data2\",\r\n                    })}\r\n                    onClick={() => setBgChartData(\"data2\")}\r\n                  >\r\n                    <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                      {isTemplateLiteralTypeNode}\r\n                      Secoand Year\r\n                    </span>\r\n                    <span className=\"d-block d-sm-none\">\r\n                      <i className=\"tim-icons icon-gift-2\" />\r\n                    </span>\r\n                  </Button>\r\n                  <Button\r\n                    color=\"info\"\r\n                    id=\"2\"\r\n                    size=\"sm\"\r\n                    tag=\"label\"\r\n                    className={classNames(\"btn-simple\", {\r\n                      active: bigChartData === \"data3\",\r\n                    })}\r\n                    onClick={() => setBgChartData(\"data3\")}\r\n                  >\r\n                    <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                      {isTemplateLiteralTypeNode}\r\n                      Third Year\r\n                    </span>\r\n                    <span className=\"d-block d-sm-none\">\r\n                      <i className=\"tim-icons icon-gift-2\" />\r\n                    </span>\r\n                  </Button>\r\n                  <Button\r\n                    color=\"info\"\r\n                    id=\"2\"\r\n                    size=\"sm\"\r\n                    tag=\"label\"\r\n                    className={classNames(\"btn-simple\", {\r\n                      active: bigChartData === \"data4\",\r\n                    })}\r\n                    onClick={() => setBgChartData(\"data4\")}\r\n                  >\r\n                    <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                      {isTemplateLiteralTypeNode}\r\n                     Last Year\r\n                    </span>\r\n                    <span className=\"d-block d-sm-none\">\r\n                      <i className=\"tim-icons icon-gift-2\" />\r\n                    </span>\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <div className=\"chart-area\">\r\n              <Line\r\n                data={chartExample1[bigChartData]}\r\n                options={chartExample1.options}\r\n              />\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    );\r\n}\r\n\r\nexport default BigChart\r\n","import React from 'react'\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\n// reactstrap components\r\nimport {\r\n\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n \r\n} from \"reactstrap\";\r\n\r\n// core components\r\n\r\nconst BarChart = ({data}) => {\r\n  const chartExample3=data;\r\n    return (\r\n      <Col lg=\"4\">\r\n        <Card className=\"card-chart\">\r\n          <CardHeader>\r\n            <h5 className=\"card-category\">Recent placements</h5>\r\n            <CardTitle tag=\"h3\">\r\n              <i className=\"tim-icons icon-money-coins text-primary\" /> Placed Students\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <div className=\"chart-area\">\r\n              <Bar data={chartExample3.data} options={chartExample3.options} />\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    );\r\n}\r\n\r\nexport default BarChart\r\n","import React from \"react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport classNames from \"classnames\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n \r\n} from \"reactstrap\";\r\n\r\n// core components\r\n\r\nconst LineChart = ({data}) => {\r\n  const  chartExample2=data;\r\n  return (\r\n    <Col lg=\"4\">\r\n      <Card className=\"card-chart\">\r\n        <CardHeader>\r\n          <h5 className=\"card-category\">Placed Students Every Year</h5>\r\n          <CardTitle tag=\"h3\">\r\n            <i className=\"tim-icons icon-tie-bow text-info\" /> Recuriment\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div className=\"chart-area\">\r\n            <Line data={chartExample2.data} options={chartExample2.options} />\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React from 'react'\r\n\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\n// core components\r\n\r\n\r\nconst PieChart = ({data}) => {\r\n  const chartExample4=data;\r\n    return (\r\n      <Col lg=\"4\">\r\n        <Card className=\"card-chart\">\r\n          <CardHeader>\r\n            <h5 className=\"card-category\">Degree Last Year Passing</h5>\r\n            <CardTitle tag=\"h3\">\r\n              <i className=\"tim-icons icon-trophy text-success\" /> 2021\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <div className=\"chart-area\">\r\n              <Pie data={chartExample4.data} options={chartExample4.options} />\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    );\r\n}\r\n\r\nexport default PieChart\r\n","\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\n\r\nconst MapWrapper = () => {\r\n  const mapRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    let google = window.google;\r\n    let map = mapRef.current;\r\n    let lat = \"40.748817\";\r\n    let lng = \"-73.985428\";\r\n    const myLatlng = new google.maps.LatLng(lat, lng);\r\n    const mapOptions = {\r\n      scrollwheel: false, //we disable de scroll over the map, it is a really annoing when you scroll through page\r\n      styles: [\r\n        {\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#1d2c4d\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          elementType: \"labels.text.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#8ec3b9\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          elementType: \"labels.text.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#1a3646\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"administrative.country\",\r\n          elementType: \"geometry.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#4b6878\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"administrative.land_parcel\",\r\n          elementType: \"labels.text.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#64779e\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"administrative.province\",\r\n          elementType: \"geometry.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#4b6878\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"landscape.man_made\",\r\n          elementType: \"geometry.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#334e87\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"landscape.natural\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#023e58\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"poi\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#283d6a\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"poi\",\r\n          elementType: \"labels.text.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#6f9ba5\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"poi\",\r\n          elementType: \"labels.text.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#1d2c4d\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"poi.park\",\r\n          elementType: \"geometry.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#023e58\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"poi.park\",\r\n          elementType: \"labels.text.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#3C7680\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"road\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#304a7d\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"road\",\r\n          elementType: \"labels.text.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#98a5be\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"road\",\r\n          elementType: \"labels.text.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#1d2c4d\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#2c6675\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"geometry.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#9d2a80\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"geometry.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#9d2a80\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"labels.text.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#b0d5ce\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"labels.text.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#023e58\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"transit\",\r\n          elementType: \"labels.text.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#98a5be\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"transit\",\r\n          elementType: \"labels.text.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#1d2c4d\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"transit.line\",\r\n          elementType: \"geometry.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#283d6a\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"transit.station\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#3a4762\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"water\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#0e1626\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"water\",\r\n          elementType: \"labels.text.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#4e6d70\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    map = new google.maps.Map(map, mapOptions);\r\n\r\n    const marker = new google.maps.Marker({\r\n      position: myLatlng,\r\n      map: map,\r\n      animation: google.maps.Animation.DROP,\r\n      title: \"BLK Design System PRO React!\",\r\n    });\r\n\r\n    const contentString =\r\n      '<div class=\"info-window-content\"><h2>BLK Dashboard React</h2>' +\r\n      \"<p>A freebie Admin for ReactStrap, Bootstrap, React, and React Hooks.</p></div>\";\r\n\r\n    const infowindow = new google.maps.InfoWindow({\r\n      content: contentString,\r\n    });\r\n\r\n    google.maps.event.addListener(marker, \"click\", function () {\r\n      infowindow.open(map, marker);\r\n    });\r\n  }, []);\r\n  return <div ref={mapRef} />;\r\n};\r\n\r\nfunction Map() {\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader>Google Maps</CardHeader>\r\n              <CardBody>\r\n                <div\r\n                  id=\"map\"\r\n                  className=\"map\"\r\n                  style={{ position: \"relative\", overflow: \"hidden\" }}\r\n                >\r\n                  <MapWrapper />\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\n\r\nfunction Typography() {\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card>\r\n              <CardHeader className=\"mb-5\">\r\n                <h5 className=\"card-category\">Black Table Heading</h5>\r\n                <CardTitle tag=\"h3\">\r\n                  Created using Poppins Font Family\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <div className=\"typography-line\">\r\n                  <h1>\r\n                    <span>Header 1</span>\r\n                    The Life of Black Dashboard React\r\n                  </h1>\r\n                </div>\r\n                <div className=\"typography-line\">\r\n                  <h2>\r\n                    <span>Header 2</span>\r\n                    The Life of Black Dashboard React\r\n                  </h2>\r\n                </div>\r\n                <div className=\"typography-line\">\r\n                  <h3>\r\n                    <span>Header 3</span>\r\n                    The Life of Black Dashboard React\r\n                  </h3>\r\n                </div>\r\n                <div className=\"typography-line\">\r\n                  <h4>\r\n                    <span>Header 4</span>\r\n                    The Life of Black Dashboard React\r\n                  </h4>\r\n                </div>\r\n                <div className=\"typography-line\">\r\n                  <h5>\r\n                    <span>Header 5</span>\r\n                    The Life of Black Dashboard React\r\n                  </h5>\r\n                </div>\r\n                <div className=\"typography-line\">\r\n                  <h6>\r\n                    <span>Header 6</span>\r\n                    The Life of Black Dashboard React\r\n                  </h6>\r\n                </div>\r\n                <div className=\"typography-line\">\r\n                  <p>\r\n                    <span>Paragraph</span>I will be the leader of a company that\r\n                    ends up being worth billions of dollars, because I got the\r\n                    answers. I understand culture. I am the nucleus. I think\r\n                    that’s a responsibility that I have, to push possibilities,\r\n                    to show people, this is the level that things could be at.\r\n                  </p>\r\n                </div>\r\n                <div className=\"typography-line\">\r\n                  <span>Quote</span>\r\n                  <blockquote>\r\n                    <p className=\"blockquote blockquote-primary\">\r\n                      \"I will be the leader of a company that ends up being\r\n                      worth billions of dollars, because I got the answers. I\r\n                      understand culture. I am the nucleus. I think that’s a\r\n                      responsibility that I have, to push possibilities, to show\r\n                      people, this is the level that things could be at.\" <br />\r\n                      <br />\r\n                      <small>- Noaa</small>\r\n                    </p>\r\n                  </blockquote>\r\n                </div>\r\n                <div className=\"typography-line\">\r\n                  <span>Muted Text</span>\r\n                  <p className=\"text-muted\">\r\n                    I will be the leader of a company that ends up being worth\r\n                    billions of dollars, because I got the answers...\r\n                  </p>\r\n                </div>\r\n                <div className=\"typography-line\">\r\n                  <span>Primary Text</span>\r\n                  <p className=\"text-primary\">\r\n                    I will be the leader of a company that ends up being worth\r\n                    billions of dollars, because I got the answers...\r\n                  </p>\r\n                </div>\r\n                <div className=\"typography-line\">\r\n                  <span>Info Text</span>\r\n                  <p className=\"text-info\">\r\n                    I will be the leader of a company that ends up being worth\r\n                    billions of dollars, because I got the answers...\r\n                  </p>\r\n                </div>\r\n                <div className=\"typography-line\">\r\n                  <span>Success Text</span>\r\n                  <p className=\"text-success\">\r\n                    I will be the leader of a company that ends up being worth\r\n                    billions of dollars, because I got the answers...\r\n                  </p>\r\n                </div>\r\n                <div className=\"typography-line\">\r\n                  <span>Warning Text</span>\r\n                  <p className=\"text-warning\">\r\n                    I will be the leader of a company that ends up being worth\r\n                    billions of dollars, because I got the answers...\r\n                  </p>\r\n                </div>\r\n                <div className=\"typography-line\">\r\n                  <span>Danger Text</span>\r\n                  <p className=\"text-danger\">\r\n                    I will be the leader of a company that ends up being worth\r\n                    billions of dollars, because I got the answers...\r\n                  </p>\r\n                </div>\r\n                <div className=\"typography-line\">\r\n                  <h2>\r\n                    <span>Small Tag</span>\r\n                    Header with small subtitle <br />\r\n                    <small>Use \"small\" tag for the headers</small>\r\n                  </h2>\r\n                </div>\r\n                <div className=\"typography-line\">\r\n                  <span>Lists</span>\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <h5>Unordered List</h5>\r\n                      <ul>\r\n                        <li>List Item</li>\r\n                        <li>List Item</li>\r\n                        <li className=\"list-unstyled\">\r\n                          <ul>\r\n                            <li>List Item</li>\r\n                            <li>List Item</li>\r\n                            <li>List Item</li>\r\n                          </ul>\r\n                        </li>\r\n                        <li>List Item</li>\r\n                      </ul>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <h5>Ordered List</h5>\r\n                      <ol>\r\n                        <li>List Item</li>\r\n                        <li>List Item</li>\r\n                        <li>List item</li>\r\n                        <li>List Item</li>\r\n                      </ol>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <h5>Unstyled List</h5>\r\n                      <ul className=\"list-unstyled\">\r\n                        <li>List Item</li>\r\n                        <li>List Item</li>\r\n                        <li>List item</li>\r\n                        <li>List Item</li>\r\n                      </ul>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <h5>Inline List</h5>\r\n                      <ul className=\"list-inline\">\r\n                        <li className=\"list-inline-item\">List1</li>\r\n                        <li className=\"list-inline-item\">List2</li>\r\n                        <li className=\"list-inline-item\">List3</li>\r\n                      </ul>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n                <div className=\"typography-line\">\r\n                  <span>Code</span>\r\n                  <p>\r\n                    This is <code>.css-class-as-code</code>, an example of an\r\n                    inline code element. Wrap inline code within a{\" \"}\r\n                    <code>{`<code>...</code>`}</code>\r\n                    tag.\r\n                  </p>\r\n                  <pre>\r\n                    1. #This is an example of preformatted text.\r\n                    <br />\r\n                    2. #Here is another line of code\r\n                  </pre>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Typography;\r\n","\r\nimport React from \"react\";\r\nimport NotificationAlert from \"react-notification-alert\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Alert,\r\n  UncontrolledAlert,\r\n  CardTitle,\r\n  \r\n \r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardText,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nfunction UserProfile() {\r\n  const notificationAlertRef = React.useRef(null);\r\n   const notify = (place) => {\r\n     var color = Math.floor(Math.random() * 5 + 1);\r\n     var type;\r\n     switch (color) {\r\n       case 1:\r\n         type = \"primary\";\r\n         break;\r\n       case 2:\r\n         type = \"success\";\r\n         break;\r\n       case 3:\r\n         type = \"danger\";\r\n         break;\r\n       case 4:\r\n         type = \"warning\";\r\n         break;\r\n       case 5:\r\n         type = \"info\";\r\n         break;\r\n       default:\r\n         break;\r\n     }\r\n     var options = {};\r\n     options = {\r\n       place: place,\r\n       message: (\r\n         <div>\r\n           <div>\r\n             Thank You <b>For giving valueable response</b> We will surly look on it.\r\n           </div>\r\n         </div>\r\n       ),\r\n       type: type,\r\n       icon: \"tim-icons icon-bell-55\",\r\n       autoDismiss: 7,\r\n     };\r\n     notificationAlertRef.current.notificationAlert(options);\r\n   };\r\n  return (\r\n    <>\r\n      <div className=\"react-notification-alert-container\">\r\n        <NotificationAlert ref={notificationAlertRef} />\r\n      </div>\r\n      <div className=\"content\">\r\n        <Row>\r\n          <Col md=\"8\">\r\n            <Card>\r\n              <CardHeader>\r\n                <h5 className=\"title\">Write the Review</h5>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Form>\r\n                  <Row>\r\n                    <Col className=\"pr-md-1\" md=\"5\">\r\n                      <FormGroup>\r\n                        <label>COLLAGE (disabled)</label>\r\n                        <Input\r\n                          defaultValue=\"ALARD COLLAGE OF ENGINEERING\"\r\n                          disabled\r\n                          placeholder=\"Company\"\r\n                          type=\"text\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col className=\"pl-md-1\" md=\"4\">\r\n                      <FormGroup>\r\n                        <label htmlFor=\"exampleInputEmail1\">\r\n                          Email address\r\n                        </label>\r\n                        <Input placeholder=\"abc@email.com\" type=\"email\" />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\"pr-md-1\" md=\"6\">\r\n                      <FormGroup>\r\n                        <label>First Name</label>\r\n                        <Input placeholder=\"Company\" type=\"text\" />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col className=\"pl-md-1\" md=\"6\">\r\n                      <FormGroup>\r\n                        <label>Last Name</label>\r\n                        <Input placeholder=\"Last Name\" type=\"text\" />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <FormGroup>\r\n                        <label>Address</label>\r\n                        <Input placeholder=\"Home Address\" type=\"text\" />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\"pr-md-1\" md=\"4\">\r\n                      <FormGroup>\r\n                        <label>City</label>\r\n                        <Input\r\n                          defaultValue=\"Pune\"\r\n                          placeholder=\"City\"\r\n                          type=\"text\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col className=\"px-md-1\" md=\"4\">\r\n                      <FormGroup>\r\n                        <label>Country</label>\r\n                        <Input\r\n                          defaultValue=\"INDIA\"\r\n                          placeholder=\"Country\"\r\n                          type=\"text\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col className=\"pl-md-1\" md=\"4\"></Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"8\">\r\n                      <FormGroup>\r\n                        <label>Your Review</label>\r\n                        <Input\r\n                          cols=\"80\"\r\n                          placeholder=\"Here can be your Review\"\r\n                          rows=\"4\"\r\n                          type=\"textarea\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button\r\n                  onClick={() => notify(\"tl\")}\r\n                  className=\"btn-fill\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                >\r\n                  SEND\r\n                </Button>\r\n              </CardFooter>\r\n            </Card>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <Card className=\"card-user\">\r\n              <CardBody>\r\n                <CardText />\r\n                <div className=\"author\">\r\n                  <div className=\"block block-one\" />\r\n                  <div className=\"block block-two\" />\r\n                  <div className=\"block block-three\" />\r\n                  <div className=\"block block-four\" />\r\n                  <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                    <img\r\n                      alt=\"...\"\r\n                      className=\"avatar\"\r\n                      src=\"https://www.icafev.com/images/Dr.%20Yadav%20Sq.jpg\"\r\n                    />\r\n                    <h5 className=\"title\">Dr. LR Yadav</h5>\r\n                  </a>\r\n                  <p className=\"description\">Founder</p>\r\n                </div>\r\n                <div className=\"card-description\">\r\n                  This year ALARD GROUP OF INSTITUTE was established and founded\r\n                  by Dr. LR Yadav, Chairman of the ALARD Charitable Trust. His\r\n                  vision and mission were clear as he wanted to fabricate the\r\n                  institute with Trust, Transparency & Teamwork.\r\n                </div>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <div className=\"button-container\">\r\n                  <Button className=\"btn-icon btn-round\" color=\"facebook\">\r\n                    <i className=\"fab fa-facebook\" />\r\n                  </Button>\r\n                  <Button className=\"btn-icon btn-round\" color=\"twitter\">\r\n                    <i className=\"fab fa-twitter\" />\r\n                  </Button>\r\n                  <Button className=\"btn-icon btn-round\" color=\"google\">\r\n                    <i className=\"fab fa-google-plus\" />\r\n                  </Button>\r\n                </div>\r\n              </CardFooter>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n","import React, { useState } from \"react\";\r\nimport SimpleTable from \"ToDoList/SimpleTable\";\r\nimport { Row } from \"reactstrap\";\r\nimport BigChart from \"../Graphs/BigChart\";\r\nimport BarChart from \"Graphs/BarChart\";\r\nimport LineChart from \"Graphs/LineChart\";\r\nimport PieChart from \"Graphs/PieChart\";\r\nimport {\r\n  chartExample1,\r\n  chartExample2,\r\n  chartExample3,\r\n  chartExample4,\r\n  studentsData,\r\n} from \"variables/Mechdata.js\";\r\n\r\nfunction Mech(props) {\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Row>\r\n          <BigChart title={\"Project Planing\"} data={chartExample1} />\r\n        </Row>\r\n        <Row>\r\n          <BarChart data={chartExample3} />\r\n          <LineChart data={chartExample2} />\r\n          <PieChart data={chartExample4} />\r\n        </Row>\r\n        <Row>\r\n          <SimpleTable data={studentsData} />\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Mech;\r\n","import React, { useState } from \"react\";\r\nimport SimpleTable from \"ToDoList/SimpleTable\";\r\nimport { Row } from \"reactstrap\";\r\nimport BigChart from \"../Graphs/BigChart\";\r\nimport BarChart from \"Graphs/BarChart\";\r\nimport LineChart from \"Graphs/LineChart\";\r\nimport PieChart from \"Graphs/PieChart\";\r\nimport {\r\n  chartExample1,\r\n  chartExample2,\r\n  chartExample3,\r\n  chartExample4,\r\n  studentsData,\r\n} from \"variables/Electrical.js\";\r\n\r\nfunction Electrical(props) {\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Row>\r\n          <BigChart title={\"Circuit design Compitions\"} data={chartExample1} />\r\n        </Row>\r\n        <Row>\r\n          <BarChart data={chartExample3} />\r\n          <LineChart data={chartExample2} />\r\n          <PieChart data={chartExample4} />\r\n        </Row>\r\n        <Row>\r\n          <SimpleTable data={studentsData} />\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Electrical;\r\n","\r\nimport SimpleTable from \"ToDoList/SimpleTable\";\r\nimport { Row } from \"reactstrap\";\r\nimport BigChart from \"../Graphs/BigChart\";\r\nimport BarChart from \"Graphs/BarChart\";\r\nimport LineChart from \"Graphs/LineChart\";\r\nimport PieChart from \"Graphs/PieChart\";\r\nimport {\r\n  chartExample1,\r\n  chartExample2,\r\n  chartExample3,\r\n  chartExample4,\r\n  studentsData,\r\n} from \"variables/ENTCData.js\";\r\n\r\nfunction ENTC(props) {\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Row>\r\n          <BigChart title={\"Project Design\"} data={chartExample1} />\r\n        </Row>\r\n        <Row>\r\n          <BarChart data={chartExample3} />\r\n          <LineChart data={chartExample2} />\r\n          <PieChart data={chartExample4} />\r\n        </Row>\r\n        <Row>\r\n          <SimpleTable data={studentsData} />\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ENTC;\r\n","import React, { useState } from \"react\";\r\nimport SimpleTable from \"ToDoList/SimpleTable\";\r\nimport { Row } from \"reactstrap\";\r\nimport BigChart from \"../Graphs/BigChart\";\r\nimport BarChart from \"Graphs/BarChart\";\r\nimport LineChart from \"Graphs/LineChart\";\r\nimport PieChart from \"Graphs/PieChart\";\r\nimport {\r\n  chartExample1,\r\n  chartExample2,\r\n  chartExample3,\r\n  chartExample4,\r\n  studentsData,\r\n} from \"variables/charts.js\";\r\n\r\nfunction Comp(props) {\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Row>\r\n          <BigChart title={\"Hackthon\"} data={chartExample1} />\r\n        </Row>\r\n        <Row>\r\n          <BarChart data={chartExample3} />\r\n          <LineChart data={chartExample2} />\r\n          <PieChart data={chartExample4} />\r\n        </Row>\r\n        <Row>\r\n          <SimpleTable data={studentsData} />\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Comp;\r\n","\r\nimport React from \"react\";\r\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// core components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nimport logo from \"assets/img/react-logo.png\";\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\n\r\nvar ps;\r\n\r\nfunction Admin(props) {\r\n  const location = useLocation();\r\n  const mainPanelRef = React.useRef(null);\r\n  const [sidebarOpened, setsidebarOpened] = React.useState(\r\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n  );\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      document.documentElement.className += \" perfect-scrollbar-on\";\r\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n      ps = new PerfectScrollbar(mainPanelRef.current, {\r\n        suppressScrollX: true,\r\n      });\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\r\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\r\n      }\r\n    };\r\n  });\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    if (mainPanelRef.current) {\r\n      mainPanelRef.current.scrollTop = 0;\r\n    }\r\n  }, [location]);\r\n  // this function opens and closes the sidebar on small devices\r\n  const toggleSidebar = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    setsidebarOpened(!sidebarOpened);\r\n  };\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  const getBrandText = (path) => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color, changeColor }) => (\r\n        <React.Fragment>\r\n          <div className=\"wrapper\">\r\n            <Sidebar\r\n              routes={routes}\r\n              logo={{\r\n                outterLink: \"http://www.alardinstitutes.com/About-Us\",\r\n                text: \"ACEM\",\r\n                imgSrc: \"http://www.alardinstitutes.com/myimg/logo.png\",\r\n              }}\r\n              toggleSidebar={toggleSidebar}\r\n            />\r\n            <div className=\"main-panel\" ref={mainPanelRef} data={color}>\r\n              <AdminNavbar\r\n                brandText={getBrandText(location.pathname)}\r\n                toggleSidebar={toggleSidebar}\r\n                sidebarOpened={sidebarOpened}\r\n              />\r\n              <Switch>\r\n                {getRoutes(routes)}\r\n                <Redirect from=\"*\" to=\"/admin/dashboard\" />\r\n              </Switch>\r\n              {\r\n                // we don't want the Footer to be rendered on map page\r\n                location.pathname === \"/admin/maps\" ? null : <Footer fluid />\r\n              }\r\n            </div>\r\n          </div>\r\n          <FixedPlugin bgColor={color} handleBgClick={changeColor} />\r\n        </React.Fragment>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","\r\nimport Dashboard from \"views/Dashboard.js\";\r\nimport Icons from \"views/Icons.js\";\r\nimport Map from \"views/Map.js\";\r\nimport Expences from \"views/Expences\";\r\nimport Notifications from \"views/Notifications.js\";\r\nimport Rtl from \"views/Rtl.js\";\r\nimport TableList from \"views/TableList.js\";\r\nimport Typography from \"views/Typography.js\";\r\nimport UserProfile from \"views/UserProfile.js\";\r\nimport Mech from \"views/Mech\";\r\nimport Electrical from \"views/Electrical\";\r\nimport ENTC from \"views/ENTC\";\r\nimport Civil from \"views/Civil\";\r\nimport Comp from \"views/Comp\";\r\n\r\nvar routes = [\r\n  \r\n  {\r\n    path: \"/mech\",\r\n    name: \"Mechnical\",\r\n    rtlName: \"Mechnical\",\r\n    icon: \"tim-icons icon-settings-gear-63\",\r\n    component: Mech,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/comp\",\r\n    name: \"Computer\",\r\n    rtlName: \"comp\",\r\n    icon: \"tim-icons icon-laptop\",\r\n    component: Comp,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/entc\",\r\n    name: \"ENTC\",\r\n    rtlName: \"ENTC\",\r\n    icon: \"tim-icons icon-settings\",\r\n    component: ENTC,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/civil\",\r\n    name: \"Civil\",\r\n    rtlName: \"Civil\",\r\n    icon: \"tim-icons icon-istanbul\",\r\n    component: Civil,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/electrical\",\r\n    name: \"Electrical\",\r\n    rtlName: \"ENTC\",\r\n    icon: \"tim-icons icon-tv-2\",\r\n    component: Electrical,\r\n    layout: \"/admin\",\r\n  },\r\n  \r\n  {\r\n    path: \"/user-profile\",\r\n    name: \"User Profile\",\r\n    rtlName: \"ملف تعريفي للمستخدم\",\r\n    icon: \"tim-icons icon-single-02\",\r\n    component: UserProfile,\r\n    layout: \"/admin\",\r\n  },\r\n  \r\n];\r\nexport default routes;\r\n","import React, { useState } from \"react\";\r\nimport SimpleTable from \"ToDoList/SimpleTable\";\r\nimport { Row } from \"reactstrap\";\r\nimport BigChart from \"../Graphs/BigChart\";\r\nimport BarChart from \"Graphs/BarChart\";\r\nimport LineChart from \"Graphs/LineChart\";\r\nimport PieChart from \"Graphs/PieChart\";\r\nimport {\r\n  chartExample1,\r\n  chartExample2,\r\n  chartExample3,\r\n  chartExample4,\r\n  studentsData,\r\n} from \"variables/Civildata.js\";\r\n\r\nconst Civil = () => {\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Row>\r\n          <BigChart title={\"Civil Plans development\"} data={chartExample1} />\r\n        </Row>\r\n        <Row>\r\n          <BarChart data={chartExample3} />\r\n          <LineChart data={chartExample2} />\r\n          <PieChart data={chartExample4} />\r\n        </Row>\r\n        <Row>\r\n          <SimpleTable data={studentsData} />\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Civil;\r\n","export default __webpack_public_path__ + \"static/media/react-logo.561f1671.png\";","\r\nimport React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  Input,\r\n  InputGroup,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Modal,\r\n  ModalHeader,\r\n  NavbarToggler,\r\n} from \"reactstrap\";\r\n\r\nfunction AdminNavbar(props) {\r\n  const [collapseOpen, setcollapseOpen] = React.useState(false);\r\n  const [modalSearch, setmodalSearch] = React.useState(false);\r\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"resize\", updateColor);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", updateColor);\r\n    };\r\n  });\r\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n  const updateColor = () => {\r\n    if (window.innerWidth < 993 && collapseOpen) {\r\n      setcolor(\"bg-white\");\r\n    } else {\r\n      setcolor(\"navbar-transparent\");\r\n    }\r\n  };\r\n  // this function opens and closes the collapse on small devices\r\n  const toggleCollapse = () => {\r\n    if (collapseOpen) {\r\n      setcolor(\"navbar-transparent\");\r\n    } else {\r\n      setcolor(\"bg-white\");\r\n    }\r\n    setcollapseOpen(!collapseOpen);\r\n  };\r\n  // this function is to open the Search modal\r\n  const toggleModalSearch = () => {\r\n    setmodalSearch(!modalSearch);\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\r\n        <Container fluid>\r\n          <div className=\"navbar-wrapper\">\r\n            <div\r\n              className={classNames(\"navbar-toggle d-inline\", {\r\n                toggled: props.sidebarOpened,\r\n              })}\r\n            >\r\n              <NavbarToggler type=\"button\" onClick={props.toggleSidebar}>\r\n                <span className=\"navbar-toggler-bar bar1\" />\r\n                <span className=\"navbar-toggler-bar bar2\" />\r\n                <span className=\"navbar-toggler-bar bar3\" />\r\n              </NavbarToggler>\r\n            </div>\r\n            <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n              {props.brandText}\r\n            </NavbarBrand>\r\n          </div>\r\n          <NavbarToggler onClick={toggleCollapse}>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n          </NavbarToggler>\r\n          <Collapse navbar isOpen={collapseOpen}>\r\n            <Nav className=\"mr-auto\" navbar>\r\n              <InputGroup className=\"search-bar\">\r\n                <Button color=\"link\" onClick={toggleModalSearch}>\r\n                  <i className=\"tim-icons icon-zoom-split\" />\r\n                  <span className=\"d-lg-none d-md-block\">Search</span>\r\n                </Button>\r\n              </InputGroup>\r\n              <UncontrolledDropdown nav>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"default\"\r\n                  data-toggle=\"dropdown\"\r\n                  nav\r\n                >\r\n                  <div className=\"notification d-none d-lg-block d-xl-block\" />\r\n                  <i className=\"tim-icons icon-sound-wave\" />\r\n                  <p className=\"d-lg-none\">Notifications</p>\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"dropdown-navbar\" tag=\"ul\" right>\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">\r\n                      Mike John responded to your email\r\n                    </DropdownItem>\r\n                  </NavLink>\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">\r\n                      You have 5 more tasks\r\n                    </DropdownItem>\r\n                  </NavLink>\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">\r\n                      Your friend Michael is in town\r\n                    </DropdownItem>\r\n                  </NavLink>\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">\r\n                      Another notification\r\n                    </DropdownItem>\r\n                  </NavLink>\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">\r\n                      Another one\r\n                    </DropdownItem>\r\n                  </NavLink>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <UncontrolledDropdown nav>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"default\"\r\n                  nav\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  <div className=\"photo\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={require(\"assets/img/anime3.png\").default}\r\n                    />\r\n                  </div>\r\n                  <b className=\"caret d-none d-lg-block d-xl-block\" />\r\n                  <p className=\"d-lg-none\">Log out</p>\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"dropdown-navbar\" tag=\"ul\">\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">Profile</DropdownItem>\r\n                  </NavLink>\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">Settings</DropdownItem>\r\n                  </NavLink>\r\n                  <DropdownItem divider tag=\"li\" />\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">Log out</DropdownItem>\r\n                  </NavLink>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <li className=\"separator d-lg-none\" />\r\n            </Nav>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <Modal\r\n        modalClassName=\"modal-search\"\r\n        isOpen={modalSearch}\r\n        toggle={toggleModalSearch}\r\n      >\r\n        <ModalHeader>\r\n          <Input placeholder=\"SEARCH\" type=\"text\" />\r\n          <button\r\n            aria-label=\"Close\"\r\n            className=\"close\"\r\n            onClick={toggleModalSearch}\r\n          >\r\n            <i className=\"tim-icons icon-simple-remove\" />\r\n          </button>\r\n        </ModalHeader>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminNavbar;\r\n","\r\nimport React from \"react\";\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// core components\r\nimport RTLNavbar from \"components/Navbars/RTLNavbar.js\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nimport logo from \"assets/img/react-logo.png\";\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\n\r\nvar ps;\r\n\r\nfunction RTL(props) {\r\n  const location = useLocation();\r\n  const mainPanelRef = React.useRef(null);\r\n  const [sidebarOpened, setsidebarOpened] = React.useState(\r\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n  );\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      document.documentElement.className += \" perfect-scrollbar-on\";\r\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n      ps = new PerfectScrollbar(mainPanelRef.current, {\r\n        suppressScrollX: true,\r\n      });\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    // on this page, we need on the body tag the classes .rtl and .menu-on-right\r\n    document.body.classList.add(\"rtl\", \"menu-on-right\");\r\n    // we also need the rtl bootstrap\r\n    // so we add it dynamically to the head\r\n    let head = document.head;\r\n    let link = document.createElement(\"link\");\r\n    link.type = \"text/css\";\r\n    link.rel = \"stylesheet\";\r\n    link.id = \"rtl-id\";\r\n    link.href =\r\n      \"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-rtl/3.4.0/css/bootstrap-rtl.css\";\r\n    head.appendChild(link);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\r\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\r\n      }\r\n      // when we exit this page, we need to delete the classes .rtl and .menu-on-right\r\n      // from the body tag\r\n      document.body.classList.remove(\"rtl\", \"menu-on-right\");\r\n      // we also need to delete the rtl bootstrap, so it does not break the other pages\r\n      // that do not make use of rtl\r\n      document.getElementById(\"rtl-id\").remove();\r\n    };\r\n  });\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    if (mainPanelRef.current) {\r\n      mainPanelRef.current.scrollTop = 0;\r\n    }\r\n  }, [location]);\r\n  // this function opens and closes the sidebar on small devices\r\n  const toggleSidebar = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    setsidebarOpened(!sidebarOpened);\r\n  };\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"/rtl\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  const getBrandText = (path) => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n  return (\r\n    <>\r\n      <BackgroundColorContext.Consumer>\r\n        {({ color, changeColor }) => (\r\n          <React.Fragment>\r\n            <div className=\"wrapper\">\r\n              <Sidebar\r\n                routes={routes}\r\n                rtlActive\r\n                logo={{\r\n                  outterLink: \"https://www.creative-tim.com/\",\r\n                  text: \"الإبداعية تيم\",\r\n                  imgSrc: logo,\r\n                }}\r\n                toggleSidebar={toggleSidebar}\r\n              />\r\n              <div className=\"main-panel\" ref={mainPanelRef} data={color}>\r\n                <RTLNavbar\r\n                  brandText={getBrandText(location.pathname)}\r\n                  toggleSidebar={toggleSidebar}\r\n                  sidebarOpened={sidebarOpened}\r\n                />\r\n                <Switch>{getRoutes(routes)}</Switch>\r\n                {\r\n                  // we don't want the Footer to be rendered on map page\r\n                  location.pathname === \"/admin/maps\" ? null : <Footer fluid />\r\n                }\r\n              </div>\r\n            </div>\r\n            <FixedPlugin bgColor={color} handleBgClick={changeColor} />\r\n          </React.Fragment>\r\n        )}\r\n      </BackgroundColorContext.Consumer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RTL;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ThemeContext, themes } from \"contexts/ThemeContext\";\r\n\r\nexport default function ThemeContextWrapper(props) {\r\n  const [theme, setTheme] = useState(themes.dark);\r\n\r\n  function changeTheme(theme) {\r\n    setTheme(theme);\r\n  }\r\n\r\n  useEffect(() => {\r\n    switch (theme) {\r\n      case themes.light:\r\n        document.body.classList.add(\"white-content\");\r\n        break;\r\n      case themes.dark:\r\n      default:\r\n        document.body.classList.remove(\"white-content\");\r\n        break;\r\n    }\r\n  }, [theme]);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme: theme, changeTheme: changeTheme }}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  BackgroundColorContext,\r\n  backgroundColors,\r\n} from \"contexts/BackgroundColorContext\";\r\n\r\nexport default function BackgroundColorWrapper(props) {\r\n  const [color, setColor] = useState(backgroundColors.blue);\r\n\r\n  function changeColor(color) {\r\n    setColor(color);\r\n  }\r\n\r\n  return (\r\n    <BackgroundColorContext.Provider\r\n      value={{ color: color, changeColor: changeColor }}\r\n    >\r\n      {props.children}\r\n    </BackgroundColorContext.Provider>\r\n  );\r\n}\r\n","\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport AdminLayout from \"layouts/Admin/Admin.js\";\r\nimport RTLLayout from \"layouts/RTL/RTL.js\";\r\n\r\nimport \"assets/scss/black-dashboard-react.scss\";\r\nimport \"assets/demo/demo.css\";\r\nimport \"assets/css/nucleo-icons.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\nimport ThemeContextWrapper from \"./components/ThemeWrapper/ThemeWrapper\";\r\nimport BackgroundColorWrapper from \"./components/BackgroundColorWrapper/BackgroundColorWrapper\";\r\n\r\nReactDOM.render(\r\n  <ThemeContextWrapper>\r\n    <BackgroundColorWrapper>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\r\n          <Route path=\"/rtl\" render={(props) => <RTLLayout {...props} />} />\r\n          <Redirect from=\"/\" to=\"/admin/mech\"/>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </BackgroundColorWrapper>\r\n  </ThemeContextWrapper>,\r\n  document.getElementById(\"root\")\r\n);\r\n","let chart1_2_options = {\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  tooltips: {\r\n    backgroundColor: \"#f5f5f5\",\r\n    titleFontColor: \"#333\",\r\n    bodyFontColor: \"#666\",\r\n    bodySpacing: 4,\r\n    xPadding: 12,\r\n    mode: \"nearest\",\r\n    intersect: 0,\r\n    position: \"nearest\",\r\n  },\r\n  responsive: true,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: \"rgba(29,140,248,0.0)\",\r\n          zeroLineColor: \"transparent\",\r\n        },\r\n        ticks: {\r\n          suggestedMin: 60,\r\n          suggestedMax: 125,\r\n          padding: 20,\r\n          fontColor: \"#9a9a9a\",\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: \"rgba(29,140,248,0.1)\",\r\n          zeroLineColor: \"transparent\",\r\n        },\r\n        ticks: {\r\n          padding: 20,\r\n          fontColor: \"#9a9a9a\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nlet chartExample1 = {\r\n  data1: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"TATA MOTOR\",\r\n        \"BAJAJ\",\r\n        \"JOHN DEER\",\r\n        \"MERCEDEZ\",\r\n        \"BMW\",\r\n        \r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Participated students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 30, 35, 30, 0],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data2: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\"TATA MOTOR\", \"BAJAJ\", \"JOHN DEER\", \"MERCEDEZ\", \"BMW\"],\r\n      datasets: [\r\n        {\r\n          label: \"Participated students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 33, 32, 40, 5],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data3: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\"TATA MOTOR\", \"BAJAJ\", \"JOHN DEER\", \"MERCEDEZ\", \"BMW\"],\r\n      datasets: [\r\n        {\r\n          label: \"Students participate \",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 30, 35, 30, 0],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data4: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\"TATA MOTOR\", \"BAJAJ\", \"JOHN DEER\", \"MERCEDEZ\", \"BMW\"],\r\n      datasets: [\r\n        {\r\n          label: \"Participated students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 33, 32, 40, 5],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: chart1_2_options,\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nlet chartExample2 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"],\r\n      datasets: [\r\n        {\r\n          label: \"placed students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [30, 40, 30, 20, 25, 40],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: chart1_2_options,\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nlet chartExample3 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\r\n\r\n    return {\r\n      labels: [\"TATA MOTOR\", \"BAJAJ\", \"JOHN DEER\", \"MERCEDEZ\", \"BMW\"],\r\n      datasets: [\r\n        {\r\n          label: \"students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          hoverBackgroundColor: gradientStroke,\r\n          borderColor: \"#d048b6\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          data: [53, 20, 10, 80, 100],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    tooltips: {\r\n      backgroundColor: \"#f5f5f5\",\r\n      titleFontColor: \"#333\",\r\n      bodyFontColor: \"#666\",\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\",\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(225,78,202,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            suggestedMin: 60,\r\n            suggestedMax: 120,\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(225,78,202,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nconst chartExample4 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\r\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\r\n\r\n    return {\r\n      labels: [\"First \", \"Secoand \", \"Third\", \"Last\"],\r\n      datasets: [\r\n        {\r\n          label: \"Passed students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#00d6b4\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#00d6b4\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#00d6b4\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [60, 55, 54, 50],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n\r\n    tooltips: {\r\n      backgroundColor: \"#f5f5f5\",\r\n      titleFontColor: \"#333\",\r\n      bodyFontColor: \"#666\",\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\",\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          barPercentage: 1.6,\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(29,140,248,0.0)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            suggestedMin: 50,\r\n            suggestedMax: 125,\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n\r\n      xAxes: [\r\n        {\r\n          barPercentage: 1.6,\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(0,242,195,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\nconst studentsData = {\r\n  data: [\r\n    {\r\n      name: \"ragiv shegal\",\r\n      year: \"2019\",\r\n      company: \"TATA MOTOR\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"ravi shegal\",\r\n      year: \"2019\",\r\n      company: \"TATA MOTOR\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"aditi bindra\",\r\n      year: \"2019\",\r\n      company: \"TATA MOTORS\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"neha Rajput\",\r\n      year: \"2019\",\r\n      company: \"TATA MOTOR\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"vikas jadhav\",\r\n      year: \"2019\",\r\n      company: \"TATA MOTOR\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"Pooja warma\",\r\n      year: \"2019\",\r\n      company: \"BAJAJ\",\r\n      sal: \"803.24\",\r\n    },\r\n  ],\r\n};\r\nmodule.exports = {\r\n  chartExample1, // in src/views/Dashboard.js\r\n  chartExample2, // in src/views/Dashboard.js\r\n  chartExample3, // in src/views/Dashboard.js\r\n  chartExample4, // in src/views/Dashboard.js\r\n  studentsData, //in src/views/Dashboard.js\r\n};\r\n","let chart1_2_options = {\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  tooltips: {\r\n    backgroundColor: \"#f5f5f5\",\r\n    titleFontColor: \"#333\",\r\n    bodyFontColor: \"#666\",\r\n    bodySpacing: 4,\r\n    xPadding: 12,\r\n    mode: \"nearest\",\r\n    intersect: 0,\r\n    position: \"nearest\",\r\n  },\r\n  responsive: true,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: \"rgba(29,140,248,0.0)\",\r\n          zeroLineColor: \"transparent\",\r\n        },\r\n        ticks: {\r\n          suggestedMin: 60,\r\n          suggestedMax: 125,\r\n          padding: 20,\r\n          fontColor: \"#9a9a9a\",\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: \"rgba(29,140,248,0.1)\",\r\n          zeroLineColor: \"transparent\",\r\n        },\r\n        ticks: {\r\n          padding: 20,\r\n          fontColor: \"#9a9a9a\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nlet chartExample1 = {\r\n  data1: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"ASUS\",\r\n        \"DELL\",\r\n        \"SAMSUMG\",\r\n        \"INTEL\",\r\n        \"IEEE Circuits\",\r\n        \"SNAPDRAGON\"\r\n        \r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"student participate\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 30, 35, 30, 0, 45],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data2: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n     labels: [\r\n        \"ASUS\",\r\n        \"DELL\",\r\n        \"SAMSUMG\",\r\n        \"INTEL\",\r\n        \"IEEE Circuits\",\r\n        \"SNAPDRAGON\"\r\n        \r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"student participate\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 33, 32, 40, 5, 55],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data3: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"ASUS\",\r\n        \"DELL\",\r\n        \"SAMSUMG\",\r\n        \"INTEL\",\r\n        \"IEEE Circuits\",\r\n        \"SNAPDRAGON\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"student participate\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 30, 35, 30, 0, 45],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data4: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n     labels: [\r\n        \"ASUS\",\r\n        \"DELL\",\r\n        \"SAMSUMG\",\r\n        \"INTEL\",\r\n        \"IEEE Circuits\",\r\n        \"SNAPDRAGON\"\r\n        \r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"student participate\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 33, 32, 40, 5, 40],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: chart1_2_options,\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nlet chartExample2 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"],\r\n      datasets: [\r\n        {\r\n          label: \"placed students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [30, 40, 30, 20, 25, 40],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: chart1_2_options,\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nlet chartExample3 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\r\n\r\n    return {\r\n      labels: [\r\n        \"ASUS\",\r\n        \"DELL\",\r\n        \"SAMSUMG\",\r\n        \"INTEL\",\r\n        \"SNAPDRAGON\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          hoverBackgroundColor: gradientStroke,\r\n          borderColor: \"#d048b6\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          data: [53, 20, 10, 80, 4, 45],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    tooltips: {\r\n      backgroundColor: \"#f5f5f5\",\r\n      titleFontColor: \"#333\",\r\n      bodyFontColor: \"#666\",\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\",\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(225,78,202,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            suggestedMin: 60,\r\n            suggestedMax: 120,\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(225,78,202,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nconst chartExample4 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\r\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\r\n\r\n    return {\r\n      labels: [\"First \", \"Secoand \", \"Third\", \"Last\"],\r\n      datasets: [\r\n        {\r\n          label: \"Passed students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#00d6b4\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#00d6b4\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#00d6b4\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [60, 55, 54, 50],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n\r\n    tooltips: {\r\n      backgroundColor: \"#f5f5f5\",\r\n      titleFontColor: \"#333\",\r\n      bodyFontColor: \"#666\",\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\",\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          barPercentage: 1.6,\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(29,140,248,0.0)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            suggestedMin: 50,\r\n            suggestedMax: 125,\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n\r\n      xAxes: [\r\n        {\r\n          barPercentage: 1.6,\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(0,242,195,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\nconst studentsData = {\r\n  data: [\r\n    {\r\n      name: \"ragiv shegal\",\r\n      year: \"2019\",\r\n      company: \"LAVA\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"ravi shegal\",\r\n      year: \"2019\",\r\n      company: \"MICROMAX\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"aditi bindra\",\r\n      year: \"2019\",\r\n      company: \"INTEL\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"neha Rajput\",\r\n      year: \"2019\",\r\n      company: \"INTEL\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"vikas jadhav\",\r\n      year: \"2019\",\r\n      company: \"ASUS\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"Pooja warma\",\r\n      year: \"2020\",\r\n      company: \"MIDEA-TAKE\",\r\n      sal: \"803.24\",\r\n    },\r\n  ],\r\n};\r\nmodule.exports = {\r\n  chartExample1, // in src/views/Dashboard.js\r\n  chartExample2, // in src/views/Dashboard.js\r\n  chartExample3, // in src/views/Dashboard.js\r\n  chartExample4, // in src/views/Dashboard.js\r\n  studentsData, //in src/views/Dashboard.js\r\n};\r\n","let chart1_2_options = {\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  tooltips: {\r\n    backgroundColor: \"#f5f5f5\",\r\n    titleFontColor: \"#333\",\r\n    bodyFontColor: \"#666\",\r\n    bodySpacing: 4,\r\n    xPadding: 12,\r\n    mode: \"nearest\",\r\n    intersect: 0,\r\n    position: \"nearest\",\r\n  },\r\n  responsive: true,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: \"rgba(29,140,248,0.0)\",\r\n          zeroLineColor: \"transparent\",\r\n        },\r\n        ticks: {\r\n          suggestedMin: 60,\r\n          suggestedMax: 125,\r\n          padding: 20,\r\n          fontColor: \"#9a9a9a\",\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: \"rgba(29,140,248,0.1)\",\r\n          zeroLineColor: \"transparent\",\r\n        },\r\n        ticks: {\r\n          padding: 20,\r\n          fontColor: \"#9a9a9a\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nlet chartExample1 = {\r\n  data1: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"MICROMAX\",\r\n        \"LAVA\",\r\n        \"SAMSUMG\",\r\n        \"JIO\",\r\n        \"VI\",\r\n        \"AIRTEL\",\r\n        \"STT Global Data Centres \",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"student participate\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 30, 35, 30, 0, 45, 30],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data2: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"MICROMAX\",\r\n        \"LAVA\",\r\n        \"SAMSUMG\",\r\n        \"JIO\",\r\n        \"VI\",\r\n        \"AIRTEL\",\r\n        \"STT Global Data Centres \",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"student participate\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 33, 32, 40, 5, 55, 10],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data3: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"MICROMAX\",\r\n        \"LAVA\",\r\n        \"SAMSUMG\",\r\n        \"JIO\",\r\n        \"VI\",\r\n        \"AIRTEL\",\r\n        \"STT Global Data Centres \",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"student participate\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 30, 35, 30, 0, 45, 30],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data4: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"MICROMAX\",\r\n        \"LAVA\",\r\n        \"SAMSUMG\",\r\n        \"JIO\",\r\n        \"VI\",\r\n        \"AIRTEL\",\r\n        \"STT Global Data Centres \"\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"student participate\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 33, 32, 40, 5, 55, 10],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: chart1_2_options,\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nlet chartExample2 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"],\r\n      datasets: [\r\n        {\r\n          label: \"placed students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [30, 40, 30, 20, 25, 40],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: chart1_2_options,\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nlet chartExample3 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\r\n\r\n    return {\r\n      labels: [\r\n       \"LAVA\",\r\n        \"SAMSUMG\",\r\n        \"JIO\",\r\n        \"VI\",\r\n        \"AIRTEL\",\r\n       \r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          hoverBackgroundColor: gradientStroke,\r\n          borderColor: \"#d048b6\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          data: [53, 20, 10, 80, 100, 45],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    tooltips: {\r\n      backgroundColor: \"#f5f5f5\",\r\n      titleFontColor: \"#333\",\r\n      bodyFontColor: \"#666\",\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\",\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(225,78,202,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            suggestedMin: 60,\r\n            suggestedMax: 120,\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(225,78,202,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nconst chartExample4 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\r\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\r\n\r\n    return {\r\n      labels: [\"First \", \"Secoand \", \"Third\", \"Last\"],\r\n      datasets: [\r\n        {\r\n          label: \"Passed students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#00d6b4\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#00d6b4\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#00d6b4\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [60, 55, 54, 50],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n\r\n    tooltips: {\r\n      backgroundColor: \"#f5f5f5\",\r\n      titleFontColor: \"#333\",\r\n      bodyFontColor: \"#666\",\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\",\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          barPercentage: 1.6,\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(29,140,248,0.0)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            suggestedMin: 50,\r\n            suggestedMax: 125,\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n\r\n      xAxes: [\r\n        {\r\n          barPercentage: 1.6,\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(0,242,195,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\nconst studentsData = {\r\n  data: [\r\n    {\r\n      name: \"ragiv shegal\",\r\n      year: \"2019\",\r\n      company: \"LAVA\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"ravi shegal\",\r\n      year: \"2019\",\r\n      company: \"MICROMAX\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"aditi bindra\",\r\n      year: \"2019\",\r\n      company: \"INTEL\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"neha Rajput\",\r\n      year: \"2019\",\r\n      company: \"INTEL\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"vikas jadhav\",\r\n      year: \"2019\",\r\n      company: \"ASUS\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"Pooja warma\",\r\n      year: \"2020\",\r\n      company: \"MIDEA-TAKE\",\r\n      sal: \"803.24\",\r\n    },\r\n  ],\r\n};\r\nmodule.exports = {\r\n  chartExample1, // in src/views/Dashboard.js\r\n  chartExample2, // in src/views/Dashboard.js\r\n  chartExample3, // in src/views/Dashboard.js\r\n  chartExample4, // in src/views/Dashboard.js\r\n  studentsData, //in src/views/Dashboard.js\r\n};\r\n","let chart1_2_options = {\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  tooltips: {\r\n    backgroundColor: \"#f5f5f5\",\r\n    titleFontColor: \"#333\",\r\n    bodyFontColor: \"#666\",\r\n    bodySpacing: 4,\r\n    xPadding: 12,\r\n    mode: \"nearest\",\r\n    intersect: 0,\r\n    position: \"nearest\",\r\n  },\r\n  responsive: true,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: \"rgba(29,140,248,0.0)\",\r\n          zeroLineColor: \"transparent\",\r\n        },\r\n        ticks: {\r\n          suggestedMin: 60,\r\n          suggestedMax: 125,\r\n          padding: 20,\r\n          fontColor: \"#9a9a9a\",\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: \"rgba(29,140,248,0.1)\",\r\n          zeroLineColor: \"transparent\",\r\n        },\r\n        ticks: {\r\n          padding: 20,\r\n          fontColor: \"#9a9a9a\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nlet chartExample1 = {\r\n  data1: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"T&T Infra\",\r\n        \"Akme Projects\",\r\n        \"L&T \",\r\n        \"Arup\",\r\n        \"Mott McDonald\",\r\n        \"Stantec\",\r\n        \"Balfour Beatty\",\r\n        \"Bechtel\",\r\n        \"HYPERLINK\",\r\n        \"Skanska\",\r\n        \"Reliance Infrastructure\",\r\n        \"Jindal \",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Participated students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 30, 35, 30, 0, 45, 30, 50, 30, 45, 30, 30],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data2: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"T&T Infra\",\r\n        \"Akme Projects\",\r\n        \"L&T \",\r\n        \"Arup\",\r\n        \"Mott McDonald\",\r\n        \"Stantec\",\r\n        \"Balfour Beatty\",\r\n        \"Bechtel\",\r\n        \"HYPERLINK\",\r\n        \"Skanska\",\r\n        \"Reliance Infrastructure\",\r\n        \"Jindal \",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"student participed\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 33, 32, 40, 5, 55, 10, 60, 40, 45, 30, 60],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data3: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"T&T Infra\",\r\n        \"Akme Projects\",\r\n        \"L&T \",\r\n        \"Arup\",\r\n        \"Mott McDonald\",\r\n        \"Stantec\",\r\n        \"Balfour Beatty\",\r\n        \"Bechtel\",\r\n        \"HYPERLINK\",\r\n        \"Skanska\",\r\n        \"Reliance Infrastructure\",\r\n        \"Jindal \",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Students participate \",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 30, 35, 30, 0, 45, 30, 50, 30, 45, 30, 30],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data4: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"T&T Infra\",\r\n        \"Akme Projects\",\r\n        \"L&T \",\r\n        \"Arup\",\r\n        \"Mott McDonald\",\r\n        \"Stantec\",\r\n        \"Balfour Beatty\",\r\n        \"Bechtel\",\r\n        \"HYPERLINK\",\r\n        \"Skanska\",\r\n        \"Reliance Infrastructure\",\r\n        \"Jindal \",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"participted students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [45, 33, 32, 40, 5, 55, 10, 60, 40, 45, 30, 60],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: chart1_2_options,\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nlet chartExample2 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"],\r\n      datasets: [\r\n        {\r\n          label: \"placed students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [30, 40, 30, 20, 25, 40],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: chart1_2_options,\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nlet chartExample3 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\r\n\r\n    return {\r\n     labels: [\r\n        \"T&T Infra\",\r\n        \"Akme Projects\",\r\n        \"L&T \",\r\n        \"Arup\",\r\n        \"Mott McDonald\",\r\n        \"Stantec\",\r\n        \r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          hoverBackgroundColor: gradientStroke,\r\n          borderColor: \"#d048b6\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          data: [53, 20, 10, 80, 100, 45],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    tooltips: {\r\n      backgroundColor: \"#f5f5f5\",\r\n      titleFontColor: \"#333\",\r\n      bodyFontColor: \"#666\",\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\",\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(225,78,202,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            suggestedMin: 60,\r\n            suggestedMax: 120,\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(225,78,202,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nconst chartExample4 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\r\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\r\n\r\n    return {\r\n      labels: [\"First \", \"Secoand \", \"Third\", \"Last\"],\r\n      datasets: [\r\n        {\r\n          label: \"Passed students\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#00d6b4\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#00d6b4\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#00d6b4\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [60, 55, 54, 50],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n\r\n    tooltips: {\r\n      backgroundColor: \"#f5f5f5\",\r\n      titleFontColor: \"#333\",\r\n      bodyFontColor: \"#666\",\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\",\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          barPercentage: 1.6,\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(29,140,248,0.0)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            suggestedMin: 50,\r\n            suggestedMax: 125,\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n\r\n      xAxes: [\r\n        {\r\n          barPercentage: 1.6,\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(0,242,195,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\nconst studentsData = {\r\n  data: [\r\n    {\r\n      name: \"ragiv shegal\",\r\n      year: \"2019\",\r\n      company: \"T&T Infra\",\r\n      sal: \"403.24\",\r\n    },\r\n    {\r\n      name: \"ravi shegal\",\r\n      year: \"2019\",\r\n      company: \"T&T Infra\",\r\n      sal: \"403.24\",\r\n    },\r\n    {\r\n      name: \"aditi bindra\",\r\n      year: \"2019\",\r\n      company: \"L&T construction\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"neha Rajput\",\r\n      year: \"2019\",\r\n      company: \"L&T construction\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"vikas jadhav\",\r\n      year: \"2019\",\r\n      company: \"L&T construction\",\r\n      sal: \"803.24\",\r\n    },\r\n    {\r\n      name: \"Pooja warma\",\r\n      year: \"2019\",\r\n      company: \"Tata Construction\",\r\n      sal: \"803.24\",\r\n    },\r\n  ],\r\n};\r\nmodule.exports = {\r\n  chartExample1, // in src/views/Dashboard.js\r\n  chartExample2, // in src/views/Dashboard.js\r\n  chartExample3, // in src/views/Dashboard.js\r\n  chartExample4, // in src/views/Dashboard.js\r\n  studentsData, //in src/views/Dashboard.js\r\n};\r\n"],"sourceRoot":""}